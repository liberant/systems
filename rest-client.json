{"name":"rest-client","master":true,"version":"1.0.0","description":"Create a REST client\n\n1. Create a schema, example 'Book', make it inherit from 'SyncComponent', add properties\n2. Create Book components\n3. Run the application\n4. Now all modications to Book components, will send POST/DELETE/PATCH requests to the server\n\nnote: you use this system with the 'REST server' example:\n\n1. Import 'REST server\n2. Create the same schema as in 'REST Client', make it inherit from 'SyncComponent', add properties\n3. Export 'REST server' example in node.js format\n4. Export 'REST client' example in HTML format \n5. Copy the generated HTML next to your 'REST server' example\n6. Run the server\n7. Go to http://127.0.0.1:8080/REST-Client.html. All modifications to the synchonized components will be send to the server.\n\nwarning: this system uses fetch API, so it does not work on Interner Explorer.","schemas":{"p18852151e81b1e3":{"_id":"p18852151e81b1e3","_name":"RestClient","_inherit":["_Component"],"ssl":"property","ip":"property","port":"property","apiName":"property","pushEnabled":"property"},"1723516a30132ac":{"_id":"1723516a30132ac","_name":"_Database","_inherit":["_Component"],"_core":true,"insert":"event","update":"event","remove":"event"},"104ad1f48518376":{"_id":"104ad1f48518376","_name":"_Channel","_inherit":["_Component"],"send":"event","serverDatabaseInsert":"event","serverDatabaseRemove":"event","serverDatabaseUpdate":"event","serverGetResult":"event","clientDatabaseInsert":"event","clientDatabaseRemove":"event","clientDatabaseUpdate":"event","clientGet":"event"},"n1d0e31337a1a5f5":{"_id":"n1d0e31337a1a5f5","_name":"SyncComponent","_inherit":["_Component"]},"k1d3c518b0317618":{"_id":"k1d3c518b0317618","_name":"HttpRequest","_inherit":["_Component"],"get":"method","post":"method","patch":"method","del":"method"},"h1edbe1d76e1a2e1":{"_id":"h1edbe1d76e1a2e1","_name":"PushRequest","_inherit":["_Component"],"listen":"method"},"d64706b6-53d8-4510-9777-a039294655a4":{"_id":"d64706b6-53d8-4510-9777-a039294655a4","_name":"User","_inherit":["SyncComponent"],"firstName":"property","lastName":"property","email":"property","phone":"property","role":"property","status":"property","password":"property","business":"link"},"ecb17e77-ceb2-49ba-a809-2f2bac6c6aee":{"_id":"ecb17e77-ceb2-49ba-a809-2f2bac6c6aee","_name":"Template","_inherit":["_Component"],"source":"property","render":"method"},"fbe92a64-893a-40ac-b5dd-68f956dce6a8":{"_id":"fbe92a64-893a-40ac-b5dd-68f956dce6a8","_name":"List","_inherit":["_Component"],"filter":"property","render":"method"},"a057b5d4-3542-4bdf-9484-8a0123c9d136":{"_id":"a057b5d4-3542-4bdf-9484-8a0123c9d136","_name":"CSS","_inherit":["_Component"],"source":"property","render":"method"},"e377d514-2992-4942-b1cb-31f7493c6d08":{"_id":"e377d514-2992-4942-b1cb-31f7493c6d08","_name":"Business","_inherit":["SyncComponent"],"name":"property","abn":"property"}},"models":{"y1f4fa12f37118ce":{"_id":"y1f4fa12f37118ce","_name":"RestClient","ip":{"type":"string","readOnly":false,"mandatory":false,"default":"127.0.0.1"},"port":{"type":"string","readOnly":false,"mandatory":false,"default":"8080"},"apiName":{"type":"string","readOnly":false,"mandatory":false,"default":"/rest"},"ssl":{"type":"boolean","readOnly":false,"mandatory":false,"default":false},"pushEnabled":{"type":"boolean","readOnly":false,"mandatory":false,"default":false}},"a18245170ae12e8b":{"_id":"a18245170ae12e8b","_name":"_Database","_core":true,"insert":{"params":[{"name":"event","type":"dbInsertEvent"}]},"update":{"params":[{"name":"event","type":"dbUpdateEvent"}]},"remove":{"params":[{"name":"event","type":"dbRemoveEvent"}]}},"f1c2361dfff1428f":{"_id":"f1c2361dfff1428f","_name":"_Channel","send":{"params":[{"name":"message","type":"message"}]},"serverDatabaseInsert":{"params":[{"name":"event","type":"dbInsertEvent","mandatory":false,"default":{}}]},"serverDatabaseRemove":{"params":[{"name":"event","type":"dbRemoveEvent","mandatory":false,"default":{}}]},"serverDatabaseUpdate":{"params":[{"name":"event","type":"dbUpdateEvent","mandatory":false,"default":{}}]},"serverGetResult":{"params":[{"name":"event","type":"getResultEvent","mandatory":false,"default":{}}]},"clientDatabaseInsert":{"params":[{"name":"event","type":"dbInsertEvent","mandatory":false,"default":{}}]},"clientDatabaseRemove":{"params":[{"name":"event","type":"dbRemoveEvent","mandatory":false,"default":{}}]},"clientDatabaseUpdate":{"params":[{"name":"event","type":"dbUpdateEvent","mandatory":false,"default":{}}]},"clientGet":{"params":[{"name":"event","type":"getEvent","mandatory":false,"default":{}}]}},"o1a56a137671baa8":{"_id":"o1a56a137671baa8","_name":"SyncComponent"},"p17f0f136c11bca0":{"_id":"p17f0f136c11bca0","_name":"HttpRequest","patch":{"params":[{"name":"collection","type":"string","mandatory":false,"default":""},{"name":"id","type":"string","mandatory":false,"default":""},{"name":"field","type":"string","mandatory":false,"default":""},{"name":"value","type":"string","mandatory":false,"default":""}]},"del":{"params":[{"name":"collection","type":"string","mandatory":false,"default":""},{"name":"id","type":"string","mandatory":false,"default":""}]},"post":{"params":[{"name":"collection","type":"string","mandatory":false,"default":""},{"name":"doc","type":"object","mandatory":false,"default":null}]},"get":{"params":[{"name":"collection","type":"string","mandatory":false,"default":""},{"name":"id","type":"string","mandatory":false,"default":""}]}},"a16f401e3a41e134":{"_id":"a16f401e3a41e134","_name":"PushRequest","listen":{}},"fda2aa8c-eef5-4428-ac3e-9adb51275bb8":{"_id":"fda2aa8c-eef5-4428-ac3e-9adb51275bb8","_name":"User","_description":"The base object reprsenting one real person who interacts with the system","firstName":{"description":"The name they are known by","type":"string","readOnly":false,"mandatory":false,"default":""},"lastName":{"description":"Legal last name as matches employers records","type":"string","readOnly":false,"mandatory":false,"default":""},"email":{"description":"Used for authentication and communication, should be a private account in a business domain.","type":"string","readOnly":false,"mandatory":false,"default":""},"phone":{"description":"Best contact number, preferrably a mobile but landlines acceptable","type":"string","readOnly":false,"mandatory":false,"default":""},"role":{"description":"The role defines what features and functions they hve access to, and establishes how we expect them to interact.","type":"Role","readOnly":false,"mandatory":false,"default":"gremlin"},"status":{"description":"Account activity status. Impacts on access and authorisation.","type":"AccountStatus","readOnly":false,"mandatory":false,"default":"active"},"password":{"description":"Make it secure.","type":"string","readOnly":false,"mandatory":false,"default":""},"business":{"description":"","type":"Business","readOnly":false,"mandatory":false,"default":""}},"e365256f-c66c-4230-8d32-780afcdfc607":{"_id":"e365256f-c66c-4230-8d32-780afcdfc607","_name":"Template","source":{"description":"html of the template","type":"html","readOnly":false,"mandatory":false,"default":""},"render":{"description":"render the template","params":[{"name":"elt","type":"DOMElement","mandatory":false,"default":null}]}},"df1c759b-7146-42e4-97db-4a14ed782ca0":{"_id":"df1c759b-7146-42e4-97db-4a14ed782ca0","_name":"List","render":{"description":"render the list"},"filter":{"description":"filter on the list","type":"string","readOnly":false,"mandatory":false,"default":"{}"}},"f9cf7a25-3dd7-41f2-8ceb-9fed703c49d0":{"_id":"f9cf7a25-3dd7-41f2-8ceb-9fed703c49d0","_name":"CSS","source":{"description":"css of the component","type":"css","readOnly":false,"mandatory":false,"default":""},"render":{"description":"render the component"}},"e0eeb0a0-e2c9-46aa-822a-e2fc58c02568":{"_id":"e0eeb0a0-e2c9-46aa-822a-e2fc58c02568","_name":"Business","_description":"","name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"abn":{"description":"","type":"number","readOnly":false,"mandatory":false,"default":0}}},"behaviors":{"p16272155eb1def6":{"_id":"p16272155eb1def6","component":"b199d91a7d310943","state":"start","action":"function start() { \n  \n    // for server push event\n  if (this.require('restClient').pushEnabled()) {\n    this.require('pushRequest').listen();\n  }\n  \n  // add HTML\n  this.require('template').render();\n  \n  // add CSS\n  this.require('list.css').render();\n  \n  // init the filter\n  this.require('list').filter('');\n  \n  // show the list\n  this.require('list').render();\n  \n  // add listener\n  document.getElementById('search').addEventListener('keyup', function keyup(e) {\n    this.require('list').filter(e.target.value.trim());\n  }.bind(this));\n  \n}","useCoreAPI":false,"core":false},"1de8c154bb18a01":{"_id":"1de8c154bb18a01","component":"_Database","state":"insert","action":"function insert(event) { \n  var logs = [],\n      lastInsertOrder = -1;\n     \n  if ($metamodel.inheritFrom(event.collection, 'SyncComponent')) {\n\n    // search if last insert action before this one \n    // was a message from the server or not\n    logs = $db._Log.find({\n      'action': 'insert',\n      'id': event.document._id\n    });\n    \n    if (logs.length) {\n      logs.sort(function sort(logA, logB) {\n        return logA.order - logB.order;\n      });\n      lastInsertOrder = logs[0].order;\n    }\n    \n    logs = $db._Log.find({\n      'order': lastInsertOrder - 1,\n      'collection': '_Message'\n    });\n\n    switch (true) {\n      case !logs[0]:\n      case logs[0] && \n           logs[0].value.event !== 'serverDatabaseInsert':\n      case logs[0] && logs[0].value.event === 'serverDatabaseInsert' && \n           logs[0].value.data[0].document._id !== event.document._id:\n           \n        // send the event to another system   \n        this.require('channel').clientDatabaseInsert(event);\n        break;\n      default:\n        break;\n    }\n  }\n}","useCoreAPI":true,"core":false},"173ff13cde1c29e":{"_id":"173ff13cde1c29e","component":"_Database","state":"remove","action":"function remove(event) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      body = '',\n      lastInsertOrder = -1,\n      systemId = this.require('runtime').system().id();\n      \n if ($metamodel.inheritFrom(event.collection, 'SyncComponent')) {\n  \n    // search if last remove action before this one \n    // was a message from the server or not\n    logs = $db._Log.find({\n      'action': 'remove',\n      'id': event.id\n    });\n    \n    if (logs.length) {\n      logs.sort(function sort(logA, logB) {\n        return logA.order - logB.order;\n      });\n      lastInsertOrder = logs[0].order;\n    }\n    \n    logs = $db._Log.find({\n      'order': lastInsertOrder - 1,\n      'collection': '_Message'\n    });\n    \n    switch (true) {\n      case !logs[0]:\n      case logs[0] && \n           logs[0].value.event !== 'serverDatabaseRemove':\n      case logs[0] && logs[0].value.event === 'serverDatabaseRemove' && \n           logs[0].value.data[0].collection !== event.collection &&\n           logs[0].value.data[0].id !== event.id:\n           \n        // send the event to another system    \n        this.require('channel').clientDatabaseRemove(event);\n        break;\n      default:\n        break;\n    }\n  }\t\n}","useCoreAPI":true,"core":false},"1e0a71b78c1fd0e":{"_id":"1e0a71b78c1fd0e","component":"_Database","state":"update","action":"function update(event) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      body = {},\n      logs = [],\n      lastInsertOrder = -1,\n      systemId = this.require('runtime').system().id();\n      \nif ($metamodel.inheritFrom(event.collection, 'SyncComponent')) {\n  \n    // search if last insert action before this one \n    // was a message from the server or not\n    logs = $db._Log.find({\n      'action': 'update',\n      'id': event.id\n    });\n    \n    if (logs.length) {\n      logs.sort(function sort(logA, logB) {\n        return logA.order - logB.order;\n      });\n      lastInsertOrder = logs[0].order;\n    }\n    \n    logs = $db._Log.find({\n      'order': lastInsertOrder - 1,\n      'collection': '_Message'\n    });\n    \n    switch (true) {\n      case !logs[0]:\n      case logs[0] && \n           logs[0].value.event !== 'serverDatabaseUpdate':\n      case logs[0] && logs[0].value.event === 'serverDatabaseUpdate' && \n           logs[0].value.data[0].id !== event.id && \n           logs[0].value.data[0].field !== event.field &&\n           logs[0].value.data[0].value !== event.value:\n           \n        // send the event to another system   \n        this.require('channel').clientDatabaseUpdate(event);\n        break;\n      default:\n        break;\n    }\n  }\n}","useCoreAPI":true,"core":false},"t1a74b1a3f8109c2":{"_id":"t1a74b1a3f8109c2","component":"_Channel","state":"serverDatabaseInsert","action":"function serverDatabaseInsert(event) { \n  var collection = this.require('db').collections()[event.collection],\n      result = [];\n    \n  result = collection.find({\n    '_id': event.document._id\n  });\n  \n  if (result.length === 0) {\n    collection.insert(event.document);\n  }\n}","useCoreAPI":false,"core":false},"v1189411f7619879":{"_id":"v1189411f7619879","component":"_Channel","state":"serverDatabaseRemove","action":"function serverDatabaseRemove(event) { \n  var collection = this.require('db').collections()[event.collection],\n      result = [];\n      \n  result = collection.find({\n    '_id': event.id\n  });\n  \n  if (result.length !== 0) {\n    collection.remove({\n      '_id': event.id\n    });\n  }\n}","useCoreAPI":false,"core":false},"p1001b116f31e25b":{"_id":"p1001b116f31e25b","component":"_Channel","state":"serverDatabaseUpdate","action":"function serverDatabaseUpdate(event) { \n  var update = {},\n      collection = this.require('db').collections()[event.collection],\n      result = [],\n      doc = null;\n    \n  result = collection.find({\n    '_id': event.id\n  });\n  doc = result[0];\n\n  update[event.field] = event.value;\n  if (doc[event.field] !== event.value) {\n    collection.update({\n        '_id': event.id\n      },\n      update\n    );\t\n  }\n}","useCoreAPI":false,"core":false},"g13c27181741875d":{"_id":"g13c27181741875d","component":"HttpRequest","state":"patch","action":"function patch(collection, id, field, value) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      systemId = this.require('runtime').system().id(),\n      body = {};\n  \n  if (restClient.ssl()) {\n    url = 'https://';\n  }\n  url = url + restClient.ip() + ':' + restClient.port() + '/' + restClient.apiName() + '/';\n  url = url.replace(/\\/\\//g, '/');\n  url = url + collection + '/' + id;\n  \n  body[field] = value;\n  \n  fetch(url, {\n    method: 'PATCH',\n    headers: new Headers({\n\t    'Content-Type': 'application/json',\n\t    'X-System-Id': systemId,\n\t    'X-System-Event': 'clientDatabaseUpdate'\n    }),\n    body: JSON.stringify(body)\n  });\n}","useCoreAPI":false,"core":false},"p1c13c187e715d33":{"_id":"p1c13c187e715d33","component":"HttpRequest","state":"del","action":"function del(collection, id) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      systemId = this.require('runtime').system().id();  \n  \n  if (restClient.ssl()) {\n    url = 'https://';\n  }\n  url = url + restClient.ip() + ':' + restClient.port() + '/' + restClient.apiName() + '/';\n  url = url.replace(/\\/\\//g, '/');\n  url = url + collection + '/' + id;\n  \n  fetch(url, {\n    method: 'DELETE',\n    headers: new Headers({\n\t    'Content-Type': 'application/json',\n\t    'X-System-Id': systemId,\n\t    'X-System-Event': 'clientDatabaseRemove'\n    })\n  });\n}","useCoreAPI":false,"core":false},"x1997111f5e161ce":{"_id":"x1997111f5e161ce","component":"HttpRequest","state":"post","action":"function post(collection, doc) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      systemId = this.require('runtime').system().id();\n  \n  if (restClient.ssl()) {\n    url = 'https://';\n  }\n  url = url + restClient.ip() + ':' + restClient.port() + '/' + restClient.apiName() + '/';\n  url = url.replace(/\\/\\//g, '/');\n  url = url + collection;\n  \n  fetch(url, {\n    method: 'POST',\n    headers: new Headers({\n\t    'Content-Type': 'application/json',\n\t    'X-System-Id': systemId,\n\t    'X-System-Event': 'clientDatabaseInsert'\n    }),\n    body: JSON.stringify(doc)\n  });\n}","useCoreAPI":false,"core":false},"g18f431534a1466a":{"_id":"g18f431534a1466a","component":"PushRequest","state":"listen","action":"function listen() { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      source = null;\n      \n  if (restClient.ssl()) {\n    url = 'https://';\n  }\n  url = url + restClient.ip() + ':' + restClient.port() + '/stream';\n  source = new EventSource(url);\n  \n  source.addEventListener('serverDatabaseInsert', function serverDatabaseInsert(event) {\n    // a message has arrived from another system\n    this.require('runtime').message(JSON.parse(event.data));\n  }.bind(this));\n  \n  source.addEventListener('serverDatabaseRemove', function serverDatabaseRemove(event) {\n    // a message has arrived from another system\n    this.require('runtime').message(JSON.parse(event.data));\n  }.bind(this));\n  \n  source.addEventListener('serverDatabaseUpdate', function serverDatabaseUpdate(event) {\n    // a message has arrived from another system\n    this.require('runtime').message(JSON.parse(event.data));\n  }.bind(this));\n}","useCoreAPI":false,"core":false},"h1efac1d27212324":{"_id":"h1efac1d27212324","component":"_Channel","state":"send","action":"function send(message) { \n  \n  // send the message to the server (which is another system)\n  \n  switch (message.event) {\n    case 'clientGet':\n      this.require('httpRequest').get(message.data[0].collection, message.data[0].id);\n      break;\n    case 'clientDatabaseInsert':\n      this.require('httpRequest').post(message.data[0].collection, message.data[0].document);\n      break;\n    case 'clientDatabaseUpdate':\n      this.require('httpRequest').patch(message.data[0].collection, message.data[0].id, message.data[0].field, message.data[0].value);\n      break;\n     case 'clientDatabaseRemove':\n      this.require('httpRequest').del(message.data[0].collection, message.data[0].id);\n      break;\n   default:\n      break;\n  }\n}","useCoreAPI":false,"core":false},"o1322514c4017bfd":{"_id":"o1322514c4017bfd","component":"HttpRequest","state":"get","action":"function get(collection, id) { \n  var restClient = this.require('restClient'),\n      url = 'http://',\n      systemId = this.require('runtime').system().id();\n  \n  if (restClient.ssl()) {\n    url = 'https://';\n  }\n  url = url + restClient.ip() + ':' + restClient.port() + '/' + restClient.apiName() + '/';\n  url = url.replace(/\\/\\//g, '/');\n  if (id) {\n    url = url + collection + '/' + id;\n  } else {\n    url = url + collection;\n  }\n  \n  fetch(url, {\n    method: 'GET',\n    headers: new Headers({\n\t    'Content-Type': 'application/json',\n\t    'X-System-Id': systemId,\n\t    'X-System-Event': 'clientGet'\n    })\n  }).then(function (response) {\n    response.json().then(function (response) {\n      // a message has arrived from another system\n      runtime.message(response);\n    });\n  });\n}","useCoreAPI":false,"core":false},"x161ee1ad1d14e88":{"_id":"x161ee1ad1d14e88","component":"_Channel","state":"serverGetResult","action":"function serverGetResult(event) { \n  var collection = this.require('db').collections()[event.collection];\n    \n  event.result.forEach(function (doc) {\n    collection.insert(doc);\n  });\n}","useCoreAPI":false,"core":false},"a2510015-701d-4674-a84a-77aeb84a05a0":{"_id":"a2510015-701d-4674-a84a-77aeb84a05a0","component":"Template","state":"render","action":"function render(elt) { \n  let html = this.source(),\n      domNode = elt;\n  \n  if (html) {\n    if (domNode === null) {\n      domNode = document.body;\n    }\n    \n    domNode.insertAdjacentHTML('beforeend', html);\n  }\n}","useCoreAPI":false,"core":false},"a436bd77-2789-47d2-98a0-7a62b8edf6ef":{"_id":"a436bd77-2789-47d2-98a0-7a62b8edf6ef","component":"List","state":"render","action":"function render() { \n let items = [],\n      properties = {},\n      links = {},\n      html = '',\n      criteria = null,\n      table = document.getElementById('table');\n  \n  if (table) {\n  \n    // get data\n    if (this.filter().trim() !== '') {\n      criteria = new RegExp(this.filter().trim(), 'gi');\n      items = this.require('db').collections().User.find({\n        firstName: criteria\n      });\n    } else {\n      items = this.require('db').collections().User.find();\n    }\n    \n    properties = this.require('User').classInfo().properties();\n    links = this.require('User').classInfo().links();\n    \n    html = '<tr>';\n    // build table header\n    properties.forEach(function(property) {\n      html = html + '<th scope=\"col\">' + property.toUpperCase() +'</th>'; \n    });\n    links.forEach(function (link) {\n      html = html + '<th scope=\"col\">' + link.toUpperCase() +'</th>'; \n    });\n    html = html + '<tr>';\n    \n    // build table body\n    items.forEach(function (item){\n      html = html + '<tr>';\n      \n      properties.forEach(function(property) {\n        html = html + '<td>' + item[property] + '</td>';\n      });\n      \n      links.forEach(function (link) {\n        const business = this.require(item[link]);\n        \n        if (business) {\n          html = html + '<td>' + business.name() + '</td>';\n        } else {\n          html = html + '<td></td>';\n        }\n      }.bind(this));\n      \n      html = html + '</tr>';\n    }.bind(this));\n    \n    html = html + '</table>';\n    \n    table.innerHTML = html;\n  }\n}","useCoreAPI":false,"core":false},"b4b0dd67-ab50-484b-adf2-9b3465650c90":{"_id":"b4b0dd67-ab50-484b-adf2-9b3465650c90","component":"CSS","state":"render","action":"function render() { \n  let div = document.createElement('style');\n  div.innerHTML = this.source();\n  document.head.appendChild(div);\n}","useCoreAPI":false,"core":false},"eef4869a-d79d-45b5-96c8-bf115a3dcac1":{"_id":"eef4869a-d79d-45b5-96c8-bf115a3dcac1","component":"List","state":"filter","action":"function filter(value) { \n\tthis.render();\n}","useCoreAPI":false,"core":false},"f7d6db98-934b-489f-b933-213243545c80":{"_id":"f7d6db98-934b-489f-b933-213243545c80","component":"Business","state":"init","action":"function init(conf) { \n  this.require('list').render();\t\n}","useCoreAPI":false,"core":false},"f26faaa2-8671-42ab-bf93-bc210417c374":{"_id":"f26faaa2-8671-42ab-bf93-bc210417c374","component":"Business","state":"destroy","action":"function destroy() { \n  this.require('list').render();\n\n  // destroy the component\n  $component.destroy(this.id());\n}","useCoreAPI":true,"core":false}},"types":{"dbUpdateEvent":{"_id":"1f5c41309711752","name":"dbUpdateEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"id":{"type":"string","mandatory":true,"default":""},"field":{"type":"string","mandatory":true,"default":""},"value":{"type":"any","mandatory":true,"default":null}}},"dbRemoveEvent":{"_id":"1952e1ac4213f4a","name":"dbRemoveEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"id":{"type":"string","mandatory":true,"default":""}}},"dbInsertEvent":{"_id":"148ef1e19810e6d","name":"dbInsertEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"document":{"type":"object","mandatory":true,"default":{}}}},"message":{"name":"message","type":"object","schema":{"event":{"type":"string","mandatory":true},"from":{"type":"string","mandatory":false},"data":{"type":"object","mandatory":true}},"core":true},"getEvent":{"_id":"b1efcf180241f0f2","name":"getEvent","type":"object","schema":{"collection":{"type":"string","mandatory":false,"default":""},"id":{"type":"string","mandatory":false,"default":""}}},"getResultEvent":{"_id":"h1f8e11b4e21689d","name":"getResultEvent","type":"object","schema":{"collection":{"type":"string","mandatory":false,"default":""},"id":{"type":"string","mandatory":false,"default":""},"result":{"type":"array","mandatory":false,"default":[]}}},"AccountStatus":{"_id":"e63f7f50-dbca-4756-8e36-50ec729bf3c7","name":"AccountStatus","description":"","type":"string","value":["active","inactive","pending","banned"]},"Role":{"_id":"b70b7b35-f59f-4b90-8bda-8a6bbb3f495b","name":"Role","description":"Defines the available user roles","type":"string","value":["admin","supplier","employee","client","gremlin"]},"DOMElement":{"_id":"cc1829ae-cf63-4e84-bc48-75514762c585","name":"DOMElement","type":"object"}},"components":{"RestClient":{"restClient":{"_id":"restClient","apiName":"/rest","ip":"127.0.0.1","port":"8080","ssl":false,"pushEnabled":false}},"_Channel":{"channel":{"_id":"channel"}},"HttpRequest":{"httpRequest":{"_id":"httpRequest"}},"PushRequest":{"pushRequest":{"_id":"pushRequest"}},"User":{"fd96dfa8-1a8d-422c-8d1f-ffcb11a7b8fb":{"_id":"fd96dfa8-1a8d-422c-8d1f-ffcb11a7b8fb","email":"dav@patreon.com","firstName":"Dave","lastName":"Walsh","password":"dxxx","phone":"07 555555","role":"admin","status":"active","business":"e42b8998-a31e-43a4-abb7-93a1823f981f"},"a60363d7-dbf7-4d97-8e3d-423b775ddd52":{"_id":"a60363d7-dbf7-4d97-8e3d-423b775ddd52","email":"mark@lendlease.com","firstName":"Mark","lastName":"Manners","password":"xxxxx","phone":"0445 654 321","role":"employee","status":"active","business":"e42b8998-a31e-43a4-abb7-93a1823f981f"}},"Template":{"template":{"_id":"template","source":"<div class=\"input-group\">\n  <input id=\"search\" type=\"text\" class=\"form-control\" placeholder=\"search for a user name\">\n</div>\n\n<table id=\"table\"></table>"}},"List":{"list":{"_id":"list","filter":""}},"CSS":{"list.css":{"_id":"list.css","source":"body {\n  padding-top: 50px;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n\n.input-group {\n  padding-bottom:20px;\n}\n\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\n\nth {\n  background-color: #e7e7e7;\n}"}},"Business":{"e42b8998-a31e-43a4-abb7-93a1823f981f":{"_id":"e42b8998-a31e-43a4-abb7-93a1823f981f","abn":444444,"name":"Lend Lease"}}},"_id":"b199d91a7d310943"}