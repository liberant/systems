{"name":"patreon-rest-server","master":true,"version":"1.0.0","description":"Basic REST serve to inspect the models\n1. New schemas must inherit from 'SyncComponent'\n2. Create components\n3. Run the application \n4. Now you can send GET/POST/PUT/DELETE/PATCH requests to http://127.0.0.1:8080/rest/","schemas":{"192b31826d11d82":{"_id":"192b31826d11d82","_name":"RestServer","_inherit":["_Component"],"ip":"property","port":"property","apiName":"property","fileStorageEnabled":"property","pushEnabled":"property","start":"method"},"l1bedc1ea351ce8<2":{"_id":"l1bedc1ea351ce82","_name":"FileStorage","_inherit":["_Component"],"load":"method","save":"method","status":"property"},"1723516a30132ac":{"_id":"1723516a30132ac","_name":"_Database","_inherit":["_Component"],"_core":true,"insert":"event","update":"event","remove":"event"},"104ad1f48518376":{"_id":"104ad1f48518376","_name":"_Channel","_inherit":["_Component"],"send":"event","serverDatabaseInsert":"event","serverDatabaseRemove":"event","serverDatabaseUpdate":"event","serverGetResult":"event","clientDatabaseInsert":"event","clientDatabaseRemove":"event","clientDatabaseUpdate":"event","clientGet":"event","externalGet":"event","externalPost":"event","externalPatch":"event","externalDelete":"event","externalPut":"event"},"q18f7416d3918b0a":{"_id":"q18f7416d3918b0a","_name":"RequestHandler","_core":true,"_inherit":["_Component"],"request":"property","response":"property","context":"method","get":"method","del":"method","post":"method","patch":"method","put":"method"},"e1698818d021506b":{"_id":"e1698818d021506b","_name":"StreamHandler","_inherit":["RequestHandler"],"stream":"method"},"s19cc211d1b176b0":{"_id":"s19cc211d1b176b0","_name":"SyncComponent","_inherit":["_Component"]},"n1d07014f311fba3":{"_id":"n1d07014f311fba3","_name":"PageRequestHandler","_inherit":["RequestHandler"],"sendPage":"method"},"user":{"_id":"user","_name":"User","_inherit":["SyncComponent"],"firstName":"property","lastName":"property","email":"property","phone":"property","role":"property","password":"property","business":"link"},"serviceCategory":{"_id":"serviceCategory","_name":"ServiceCategory","_inherit":["SyncComponent"],"name":"property","active":"property","services":"collection"},"serviceProvider":{"_id":"serviceProvider","_name":"ServiceProvider","_inherit":["Business"],"rating":"property","services":"collection","employees":"collection"},"project":{"_id":"project","_name":"Project","_inherit":["SyncComponent"],"name":"property","description":"property","client":"link","startDate":"property","endDate":"property","sites":"collection","contracts":"collection"},"booking":{"_id":"booking","_name":"Booking","_inherit":["SyncComponent"],"project":"link","client":"link","site":"link","startDate":"property","endDate":"property","service":"link","serviceProvider":"link","jobsheets":"collection"},"contract":{"_id":"contract","_name":"Contract","_inherit":["SyncComponent"],"project":"link","name":"property","client":"link","description":"property","budget":"property","start":"property","end":"property","status":"property","file":"property","services":"collection","bookings":"collection"},"client":{"_id":"client","_name":"Client","_inherit":["Business"],"projects":"collection","contracts":"collection","bookings":"collection"},"dispute":{"_id":"dispute","_name":"Dispute","_inherit":["SyncComponent"],"booking":"link","contract":"link","status":"property","created":"property","reportedUser":"link","reportedBy":"link","comments":"property","notes":"property"},"resource":{"_id":"resource","_name":"Resource","_inherit":["SyncComponent"]},"transactions":{"_id":"transactions","_name":"Transactions","_inherit":["SyncComponent"]},"service":{"_id":"service","_name":"Service","_inherit":["SyncComponent"],"name":"property","state":"property","staffNumber":"property","serviceCategory":"link","asset":"link","description":"property","rating":"property","active":"property","subService":"collection"},"asset":{"_id":"asset","_name":"Asset","_inherit":["SyncComponent"],"type":"property","name":"property","licenseNo":"property","serialNo":"property","model":"property","make":"property"},"employee":{"_id":"employee","_name":"Employee","_inherit":["User","SyncComponent"],"emergencyContact":"property","emergencyPhone":"property","jobs":"collection"},"jobsheet":{"_id":"jobsheet","_name":"JobSheet","_inherit":["SyncComponent"],"booking":"link","start":"property","end":"property","client":"link","project":"link","employee":"link"},"business":{"_id":"business","_name":"Business","_inherit":["SyncComponent"],"type":"property","name":"property","abn":"property","address":"property","phone":"property","primaryContact":"link","users":"collection"},"site":{"_id":"site","_name":"Site","_inherit":["SyncComponent"],"name":"property","client":"link","address":"property"}},"models":{"1219d183a917281":{"_id":"1219d183a917281","_name":"RestServer","start":{},"ip":{"type":"string","readOnly":false,"mandatory":false,"default":"127.0.0.1"},"port":{"type":"string","readOnly":false,"mandatory":false,"default":"8080"},"apiName":{"type":"string","readOnly":false,"mandatory":false,"default":"/rest"},"_core":true,"pushEnabled":{"type":"boolean","readOnly":false,"mandatory":false,"default":true},"fileStorageEnabled":{"type":"boolean","readOnly":false,"mandatory":false,"default":false}},"s10b3e102bb19d1f":{"_id":"s10b3e102bb19d1f","_name":"FileStorage","load":{},"save":{},"status":{"type":"fileStatus","readOnly":false,"mandatory":false,"default":"unloaded"}},"q146a11f3a417b17":{"_id":"q146a11f3a417b17","_name":"_Database","_core":true,"insert":{"params":[{"name":"event","type":"dbInsertEvent"}]},"update":{"params":[{"name":"event","type":"dbUpdateEvent"}]},"remove":{"params":[{"name":"event","type":"dbRemoveEvent"}]}},"u1427b16ae11ce88":{"_id":"u1427b16ae11ce88","_name":"_Channel","send":{"params":[{"name":"message","type":"message"}]},"serverDatabaseInsert":{"params":[{"name":"event","type":"dbInsertEvent","mandatory":false,"default":{}}]},"serverDatabaseRemove":{"params":[{"name":"event","type":"dbRemoveEvent","mandatory":false,"default":{}}]},"serverDatabaseUpdate":{"params":[{"name":"event","type":"dbUpdateEvent","mandatory":false,"default":{}}]},"serverGetResult":{"params":[{"name":"event","type":"getResultEvent","mandatory":false,"default":{}}]},"clientDatabaseInsert":{"params":[{"name":"event","type":"dbInsertEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"clientDatabaseRemove":{"params":[{"name":"event","type":"dbRemoveEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"clientDatabaseUpdate":{"params":[{"name":"event","type":"dbUpdateEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"clientGet":{"params":[{"name":"event","type":"getEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"externalPost":{"params":[{"name":"event","type":"dbInsertEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"externalPatch":{"params":[{"name":"event","type":"dbUpdateEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"externalGet":{"params":[{"name":"event","type":"dbFindEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"externalDelete":{"params":[{"name":"event","type":"dbRemoveEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]},"externalPut":{"params":[{"name":"event","type":"putEvent","mandatory":false,"default":{}},{"name":"requestHandlerId","type":"string","mandatory":false,"default":""}]}},"h1c8051340d1c272":{"_id":"h1c8051340d1c272","_name":"RequestHandler","request":{"type":"object","readOnly":false,"mandatory":false,"default":{}},"response":{"type":"object","readOnly":false,"mandatory":false,"default":{}},"context":{"result":"object"},"_core":true,"get":{},"del":{},"post":{},"patch":{},"put":{}},"c14af31e10a1e0d3":{"_id":"c14af31e10a1e0d3","_name":"StreamHandler","stream":{}},"b165bb1218018306":{"_id":"b165bb1218018306","_name":"SyncComponent"},"h1a86a1501411405":{"_id":"h1a86a1501411405","_name":"PageRequestHandler","sendPage":{"params":[{"name":"url","type":"string","mandatory":false,"default":""}]}},"b7f251a8-032d-46af-ac3a-7d65e880aac0":{"_id":"b7f251a8-032d-46af-ac3a-7d65e880aac0","_name":"User","_description":"The base object reprsenting one real person who interacts with the system","firstName":{"description":"The name they are known by","type":"string","readOnly":false,"mandatory":false,"default":""},"lastName":{"description":"Legal last name as matches employers records","type":"string","readOnly":false,"mandatory":false,"default":""},"email":{"description":"Used for authentication and communication, should be a private account in a business domain.","type":"string","readOnly":false,"mandatory":false,"default":""},"phone":{"description":"Best contact number, preferrably a mobile but landlines acceptable","type":"string","readOnly":false,"mandatory":false,"default":""},"role":{"description":"The role defines what features and functions they hve access to, and establishes how we expect them to interact.","type":"Role","readOnly":false,"mandatory":false,"default":"gremlin"},"password":{"description":"Make it secure.","type":"string","readOnly":false,"mandatory":false,"default":""},"business":{"description":"","type":"Business","kind":"dependency","readOnly":false,"mandatory":false,"default":{}}},"a2acf62e-31a2-4f55-97e6-d10ba8ee462e":{"_id":"a2acf62e-31a2-4f55-97e6-d10ba8ee462e","_name":"ServiceCategory","_description":"","name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"active":{"description":"","type":"boolean","readOnly":false,"mandatory":false,"default":true},"services":{"description":"","type":["Service"],"kind":"aggregation","readOnly":false,"mandatory":false,"default":[]}},"ac6b4c22-f6b5-49e6-b6e0-54615f84f29a":{"_id":"ac6b4c22-f6b5-49e6-b6e0-54615f84f29a","_name":"Project","_description":"","name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"description":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"startDate":{"description":"Project start date","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"endDate":{"description":"Project end date","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"contracts":{"description":"","type":["Contract"],"readOnly":false,"mandatory":false,"default":[]},"sites":{"description":"","type":["Site"],"kind":"normal","readOnly":false,"mandatory":false,"default":[]},"client":{"description":"","type":"Client","kind":"dependency","readOnly":false,"mandatory":false,"default":""}},"ae605371-3f95-4ad9-ad26-415d82c31d4f":{"_id":"ae605371-3f95-4ad9-ad26-415d82c31d4f","_name":"Booking","_description":"","project":{"description":"","type":"Project","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"client":{"description":"","type":"Client","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"site":{"description":"","type":"Site","kind":"dependency","readOnly":false,"mandatory":false,"default":{}},"startDate":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"endDate":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"service":{"description":"","type":"Service","kind":"dependency","readOnly":false,"mandatory":false,"default":{}},"serviceProvider":{"description":"","type":"ServiceProvider","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"jobsheets":{"description":"","type":["jobsheet"],"kind":"normal","readOnly":false,"mandatory":false,"default":[]}},"cc963f95-65d4-4c72-9a56-ccef49005871":{"_id":"cc963f95-65d4-4c72-9a56-ccef49005871","_name":"Contract","_description":"","project":{"description":"","type":"Project","kind":"aggregation","readOnly":false,"mandatory":false,"default":{}},"name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"client":{"description":"","type":"Client","kind":"normal","readOnly":false,"mandatory":false,"default":{}},"description":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"budget":{"description":"","type":"number","readOnly":false,"mandatory":false,"default":0},"start":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"end":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"status":{"description":"","type":"ContractStatus","readOnly":false,"mandatory":false,"default":"draft"},"file":{"description":"","type":"any","readOnly":false,"mandatory":false,"default":""},"services":{"description":"","type":["Service"],"kind":"aggregation","readOnly":false,"mandatory":false,"default":[]},"bookings":{"description":"","type":["Booking"],"kind":"aggregation","readOnly":false,"mandatory":false,"default":[]}},"c0a1dd3c-a8ff-4e53-a8f4-eac3f59f3ba4":{"_id":"c0a1dd3c-a8ff-4e53-a8f4-eac3f59f3ba4","_name":"Calendar","_description":""},"eb571373-0457-4be4-99e7-8ebcdd0d1fc3":{"_id":"eb571373-0457-4be4-99e7-8ebcdd0d1fc3","_name":"Dispute","_description":"","booking":{"description":"","type":"Booking","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"contract":{"description":"","type":"Contract","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"status":{"description":"","type":"DisputeStatus","readOnly":false,"mandatory":false,"default":"new"},"created":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"reportedUser":{"description":"","type":"Employee","kind":"normal","readOnly":false,"mandatory":false,"default":""},"reportedBy":{"description":"","type":"User","kind":"dependency","readOnly":false,"mandatory":false,"default":""},"comments":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"notes":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""}},"fff2d389-f19a-4a50-ae10-48570ddd53c1":{"_id":"fff2d389-f19a-4a50-ae10-48570ddd53c1","_name":"Resource","_description":""},"da2c83f2-fa1c-4f15-a6d5-ed459da7c6a3":{"_id":"da2c83f2-fa1c-4f15-a6d5-ed459da7c6a3","_name":"Transactions","_description":""},"f3f384b6-7bdb-407d-9f75-111644239d64":{"_id":"f3f384b6-7bdb-407d-9f75-111644239d64","_name":"Service","_description":"","name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"state":{"description":"","type":"State","readOnly":false,"mandatory":false,"default":"QLD"},"rating":{"description":"","type":"number","readOnly":false,"mandatory":false,"default":5},"staffNumber":{"description":"","type":"number","readOnly":false,"mandatory":false,"default":1},"serviceCategory":{"description":"","type":"ServiceCategory","kind":"composition","readOnly":false,"mandatory":false,"default":""},"asset":{"description":"","type":"Asset","kind":"aggregation","readOnly":false,"mandatory":false,"default":{}},"description":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"subService":{"description":"","type":["Service"],"kind":"aggregation","readOnly":false,"mandatory":false,"default":[]},"active":{"description":"","type":"boolean","readOnly":false,"mandatory":false,"default":true}},"b4170147-858a-4195-9b0a-77ee531b60d0":{"_id":"b4170147-858a-4195-9b0a-77ee531b60d0","_name":"Asset","_description":"","type":{"description":"","type":"AssetTypes","readOnly":false,"mandatory":false,"default":"machinery"},"licenseNo":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"model":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"make":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"serialNo":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""}},"cacbc73f-71be-475b-aa73-1a2da4d512aa":{"_id":"cacbc73f-71be-475b-aa73-1a2da4d512aa","_name":"Employee","_description":"","emergencyContact":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"emergencyPhone":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"jobs":{"description":"","type":["Booking"],"kind":"aggregation","readOnly":false,"mandatory":false,"default":[]}},"e4a9f575-ec8f-4e98-aa28-c917f23b958d":{"_id":"e4a9f575-ec8f-4e98-aa28-c917f23b958d","_name":"JobSheet","_description":"","booking":{"description":"","type":"Booking","kind":"dependency","readOnly":false,"mandatory":false,"default":{}},"start":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"end":{"description":"","type":"date","readOnly":false,"mandatory":false,"default":"1970-01-01T00:00:00.000Z"},"client":{"description":"","type":"Client","kind":"normal","readOnly":false,"mandatory":false,"default":{}},"project":{"description":"","type":"Project","kind":"normal","readOnly":false,"mandatory":false,"default":{}},"employee":{"description":"","type":"User","kind":"dependency","readOnly":false,"mandatory":false,"default":{}}},"a039a6ea-e2f3-4531-a720-ccd733936031":{"_id":"a039a6ea-e2f3-4531-a720-ccd733936031","_name":"Business","_description":"","type":{"description":"","type":"BusinessType","readOnly":false,"mandatory":false,"default":"client"},"name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"abn":{"description":"","type":"number","readOnly":false,"mandatory":false,"default":0},"address":{"description":"","type":"Address","readOnly":false,"mandatory":false,"default":{}},"phone":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"primaryContact":{"description":"","type":"User","kind":"dependency","readOnly":false,"mandatory":false,"default":{}},"users":{"description":"","type":["User"],"readOnly":false,"mandatory":false,"default":[]}},"bbbf0be9-83f1-45aa-9742-d3e95f97b010":{"_id":"bbbf0be9-83f1-45aa-9742-d3e95f97b010","_name":"Site","_description":"","name":{"description":"","type":"string","readOnly":false,"mandatory":false,"default":""},"client":{"description":"","type":"Client","kind":"dependency","readOnly":false,"mandatory":false,"default":{}},"address":{"description":"","type":"Address","readOnly":false,"mandatory":false,"default":{}}},"client":{"_id":"client","_name":"Client","_description":"","projects":{"description":"","type":["Project"],"readOnly":false,"mandatory":false,"default":[]},"contracts":{"description":"","type":["Contract"],"readOnly":false,"mandatory":false,"default":[]},"bookings":{"description":"","type":["Booking"],"readOnly":false,"mandatory":false,"default":[]}},"ecc4ef40-d150-4980-bb45-23a0e81aa034":{"_id":"ecc4ef40-d150-4980-bb45-23a0e81aa034","_name":"ServiceProvider","_description":"","rating":{"description":"","type":"any","readOnly":false,"mandatory":false,"default":""},"services":{"description":"","type":["Service"],"kind":"normal","readOnly":false,"mandatory":false,"default":[]},"employees":{"description":"","type":["Employee"],"kind":"normal","readOnly":false,"mandatory":false,"default":[]}}},"behaviors":{"16bb01bab613f08":{"_id":"16bb01bab613f08","component":"134f61c924166c0","state":"start","action":"function start() { \n  // enable storage of components in file\n  if (this.require('restServer').fileStorageEnabled()) {\n    this.require('fileStorage').load();\n  }\n  this.require('restServer').start();\n}","useCoreAPI":false,"core":false},"114291aef21b5b0":{"_id":"114291aef21b5b0","component":"RestServer","state":"start","action":"function start() {\n  var http = require('http');\n\n  // Create server\n  http.createServer(function (req, res) {\n    var RequestHandler = this.require('RequestHandler'),\n        StreamHandler = this.require('StreamHandler'),\n        PageRequestHandler = this.require('PageRequestHandler'),\n        requestHandler = null,\n        streamHandler = null,\n        pageRequestHandler = null,\n        page = null;\n  \n    switch (req.method) {\n      case 'GET':\n        switch (true) {\n          case this.pushEnabled() && req.url === '/stream':\n            streamHandler = new StreamHandler({\n              request: req,\n              response: res\n            });\n            streamHandler.stream();\n            break;\n          case req.url.indexOf('.html') !== -1:\n            pageRequestHandler = new PageRequestHandler({\n              request: req,\n              response: res\n            });\n            pageRequestHandler.sendPage(req.url);\n            break;\n          case req.url.indexOf('.html') === -1 && req.url !== '/stream':\n            requestHandler = new RequestHandler({\n              request: req,\n              response: res\n            });\n            requestHandler.get();\n            break;\n          default:\n            break;\n        }\n        break;\n      case 'DELETE':\n        requestHandler = new RequestHandler({\n          request: req,\n          response: res\n        });\n        requestHandler.del();\n        break;\n      case 'POST':\n        requestHandler = new RequestHandler({\n          request: req,\n          response: res\n        });\n        requestHandler.post();\n        break;\n      case 'PUT':\n        requestHandler = new RequestHandler({\n          request: req,\n          response: res\n        });\n        requestHandler.put();\n        break;\n      case 'PATCH':\n        requestHandler = new RequestHandler({\n          request: req,\n          response: res\n        });\n        requestHandler.patch();\n        break;\n      default:\n        break;\n    }\n  }.bind(this)).listen(this.require('restServer').port(), this.require('restServer').ip());\n\n  this.require('logger').info('the server is started on http://' + this.require('restServer').ip() + ':' + this.require('restServer').port());\n  this.require('logger').info('REST apis are active on ' + this.require('restServer').apiName());\n}","useCoreAPI":false,"core":false},"f1ddff1b17a19c96":{"_id":"f1ddff1b17a19c96","component":"FileStorage","state":"load","action":"function load() { \n  var fs = require('fs'),\n      logger = this.require('logger'),\n      collection = '',\n      id = '';\n      \n  fs.readFile(global.process.env.PWD + '/datastore.json', 'UTF-8', function (err, dataStore) {\n    if (err) {\n      fs.writeFile(global.process.env.PWD + '/datastore.json', '{}', 'UTF-8', function (err) {\n        if (err) {\n          logger.error(err);\n          return;\n        }\n        this.status('loaded');\n        this.save();\n      }.bind(this));\n      return;\n    }\n    if (dataStore.trim() !== '') {\n      dataStore = JSON.parse(dataStore);\n      \n      // insert all documents in System Runtime database\n      for (collection in dataStore) {\n        for (id in dataStore[collection]) {\n          $db[collection].insert(dataStore[collection][id]);\n        }\n      }\n    }\n    this.status('loaded');\n  }.bind(this));\n}","useCoreAPI":true,"core":false},"k1a6881c6b01e571":{"_id":"k1a6881c6b01e571","component":"FileStorage","state":"save","action":"function save() { \n\tvar collections = this.require('db').collections(),\n\t    docs = [],\n\t    store = {},\n\t    collection = '',\n\t    fs = require('fs'),\n\t    logger = this.require('logger');\n\t    \n\tfor (collection in collections) {\n\t  if ($metamodel.inheritFrom(collection, 'SyncComponent') && collection !== 'SyncComponent') {\n\t    store[collection] = {};\n\t    \n\t    docs = collections[collection].find();\n\t    docs.forEach(function forEach(doc) {\n\t      var storedoc = JSON.parse(JSON.stringify(doc));\n\t      \n\t      delete storedoc.classInfo;\n\t      store[collection][storedoc._id] = storedoc;\n\t    });\n\t  }\n\t}    \n\t    \n  if (this.status() === 'loaded') {\n    fs.writeFile(global.process.env.PWD + '/datastore.json', JSON.stringify(store), 'UTF-8', function (err) {\n      if (err) {\n        logger.error(err);\n        return;\n      }\n    });    \n  }\n}","useCoreAPI":true,"core":false},"1de8c154bb18a01":{"_id":"1de8c154bb18a01","component":"_Database","state":"insert","action":"function insert(event) { \n  var logs = [],\n      lastInsertOrder = -1;\n      \n  if ($metamodel.inheritFrom(event.collection,'SyncComponent')) {    \n    if (this.require('restServer').fileStorageEnabled()) {\n      this.require('fileStorage').save();\n    }\n\n    if (this.require('db').collections().StreamHandler.count() > 0) {\n      // search if last insert action before this one \n      // was a message from the server or not\n      logs = $db._Log.find({\n        'action': 'insert',\n        'id': event.document._id\n      });\n     \n      if (logs.length) {\n        logs.sort(function sort(logA, logB) {\n          return logA.order - logB.order;\n        });\n        lastInsertOrder = logs[0].order;\n      }\n      \n      logs = $db._Log.find({\n        'order': lastInsertOrder - 1,\n        'collection': '_Message'\n      });\n      \n      switch (true) {\n        case !logs[0]:\n        case logs[0] && \n             logs[0].value.event !== 'clientDatabaseInsert':\n        case logs[0] && logs[0].value.event === 'clientDatabaseInsert' && \n             logs[0].value.data[0].document._id !== event.document._id:\n            \n            // an event is send to the channel\n            this.require('channel').serverDatabaseInsert(event);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","useCoreAPI":true,"core":false},"173ff13cde1c29e":{"_id":"173ff13cde1c29e","component":"_Database","state":"remove","action":"function remove(event) { \n  var logs = [],\n      lastInsertOrder = -1;\n      \n  if ($metamodel.inheritFrom(event.collection,'SyncComponent')) {\n    if (this.require('restServer').fileStorageEnabled()) {\n      this.require('fileStorage').save();\n    }\n  \n    if (this.require('db').collections().StreamHandler.count() > 0) {\n      // search if last remove action before this one \n      // was a message from the server or not\n      logs = $db._Log.find({\n        'action': 'remove',\n        'id': event.id\n      });\n      \n      if (logs.length) {\n        logs.sort(function sort(logA, logB) {\n          return logA.order - logB.order;\n        });\n        lastInsertOrder = logs[0].order;\n      }\n      \n      logs = $db._Log.find({\n        'order': lastInsertOrder - 1,\n        'collection': '_Message'\n      });\n      \n      switch (true) {\n        case !logs[0]:\n        case logs[0] && \n             logs[0].value.event !== 'clientDatabaseRemove':\n        case logs[0] && logs[0].value.event === 'clientDatabaseRemove' && \n             logs[0].value.data[0].collection !== event.collection &&\n             logs[0].value.data[0].id !== event.id:\n             \n          // an event is send to the channel\n          this.require('channel').serverDatabaseRemove(event);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","useCoreAPI":true,"core":false},"1e0a71b78c1fd0e":{"_id":"1e0a71b78c1fd0e","component":"_Database","state":"update","action":"function update(event) { \n  var logs = [],\n      lastInsertOrder = -1;\n  \n  if ($metamodel.inheritFrom(event.collection,'SyncComponent')) {\n    if (this.require('restServer').fileStorageEnabled()) {\n      this.require('fileStorage').save();\n    }\n \n    if (this.require('db').collections().StreamHandler.count() > 0) {\n      // search if last insert action before this one \n      // was a message from the server or not\n      logs = $db._Log.find({\n        'action': 'update',\n        'id': event.id\n      });\n      \n      if (logs.length) {\n        logs.sort(function sort(logA, logB) {\n          return logA.order - logB.order;\n        });\n        lastInsertOrder = logs[0].order;\n      }\n      \n      logs = $db._Log.find({\n        'order': lastInsertOrder - 1,\n        'collection': '_Message'\n      });\n      \n      switch (true) {\n        case !logs[0]:\n        case logs[0] && \n             logs[0].value.event !== 'clientDatabaseUpdate':\n        case logs[0] && logs[0].value.event === 'clientDatabaseUpdate' && \n             logs[0].value.data[0].id !== event.id && \n             logs[0].value.data[0].field !== event.field &&\n             logs[0].value.data[0].value !== event.value:\n             \n          // an event is send to the channel\n          this.require('channel').serverDatabaseUpdate(event);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","useCoreAPI":true,"core":false},"n173ca1b0e81fcb0":{"_id":"n173ca1b0e81fcb0","component":"FileStorage","state":"status","action":"function status(value) { \n  if (value === 'loaded') {\n    this.require('logger').info('datastore.json file is loaded.');\n  }\t\n}","useCoreAPI":false,"core":false},"1ae8e11ece1a658":{"_id":"1ae8e11ece1a658","component":"_Channel","state":"send","action":"function send(message) { \n  var streamsHandlers = [],\n      strMessage = '';\n    \n  try {\n    strMessage = JSON.stringify(message);\n  } catch(e) {\n  }\n  \n  if (strMessage !== '') {\n    streamsHandlers = this.require('db').collections().StreamHandler.find();\n    streamsHandlers.forEach(function (streamHandler) {\n      this.require(streamHandler._id).response().write('event:' + message.event + '\\n');\n      this.require(streamHandler._id).response().write('data:' + strMessage + '\\n\\n');\n    }.bind(this));\n  }\n}","useCoreAPI":false,"core":false},"u11fb61661d154e0":{"_id":"u11fb61661d154e0","component":"RequestHandler","state":"context","action":"function context() { \n  var context = {},\n      collection ='',\n      id = '',\n      property = '',\n      url = '' ,\n      path = [],\n      i = 0,\n      length = 0,\n      apiName = this.require('restServer').apiName();\n \n  url = this.request().url;  \n     \n  if (apiName === '') {\n    this.require('logger').warn('API name not found, please set one.');\n  } else {\n    apiName = apiName + '/';\n    apiName = apiName.replace('//', '/');\n  \n    if (url.indexOf(apiName) !== -1) {\n      path = url.split(apiName)[1].split('/');\n      length = path.length;\n      \n      for (i = 0; i < length; i++) {\n        if (i === 0) {\n          collection = path[i].split('?')[0];\n        }\n        if (i === 1) {\n          id = path[i].split('?')[0];\n        }\n        if (i === 2) {\n          property = path[i].split('?')[0];\n        }\n      }\n    }\n  }\n  \n  switch (this.request().method) {\n    case 'GET':\n      context.collection = collection;\n      context.id = id;\n      context.property = property;\n      break;\n    case 'DELETE':\n      context.collection = collection;\n      context.id = id;\n      break;\n    case 'POST':\n      context.collection = collection;\n      context.document = {};\n      break;\n    case 'PATCH':\n      context.collection = collection;\n      context.id = id;\n      break;\n    case 'PUT':\n      context.collection = collection;\n      context.id = id;\n      break;\n    default:\n      break;\n  }\n\n  return context;\n}","useCoreAPI":false,"core":false},"q1fd171f1a5179a4":{"_id":"q1fd171f1a5179a4","component":"_Channel","state":"clientDatabaseInsert","action":"function clientDatabaseInsert(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId),\n      doc = null,\n      tabid = [];\n\n  if (event.collection && $db[event.collection] ) {\n    tabid = $db[event.collection].insert(event.document);\n    doc = $db[event.collection].find({\n      '_id': tabid[0]\n    })[0];\n    doc = JSON.parse(JSON.stringify(doc));\n    delete doc.classInfo;\n\n    requestHandler.response().writeHead(201, { \n      'Content-Type': 'application/json', \n      'Access-Control-Allow-Origin': '*' \n    });\n    requestHandler.response().end(JSON.stringify(doc));\n  } else {\n    requestHandler.response().writeHead(200, { \n      'Content-Type': 'application/json', \n      'Access-Control-Allow-Origin': '*'\n    });\n    requestHandler.response().end('');\n  }\t\n}","useCoreAPI":true,"core":false},"s18bcd12d8d138eb":{"_id":"s18bcd12d8d138eb","component":"RequestHandler","state":"get","action":"function get() {\n  // a message has arrived from another system\n  this.require('runtime').message({\n    'event': this.request().headers['x-system-event'] || 'externalGet',\n    'from': this.request().headers['x-system-id'] || '',\n    'data': [this.context(), this.id()]\n  });\n}","useCoreAPI":false,"core":false},"a14f5d1c8bb17a91":{"_id":"a14f5d1c8bb17a91","component":"_Channel","state":"clientDatabaseRemove","action":"function clientDatabaseRemove(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId);\n  \n  // delete compononent(s)\n  if (event.collection && $db[event.collection]) {\n    if (event.id) {\n      $db[event.collection].remove({\n        '_id': event.id\n      });\n    } else {\n      $db[event.collection].remove();\n    }\n  }\n  \n  // response\n  requestHandler.response().writeHead(200, { \n    'Content-Type': 'application/json', \n    'Access-Control-Allow-Origin': '*'\n  });\n  requestHandler.response().end('');\n}","useCoreAPI":true,"core":false},"e1631d172b613353":{"_id":"e1631d172b613353","component":"RequestHandler","state":"del","action":"function del() { \n  // a message has arrived from another system\n  this.require('runtime').message({\n    'event': this.request().headers['x-system-event'] || 'externalDelete',\n    'from': this.request().headers['x-system-id'] || '',\n    'data': [this.context(), this.id()]\n  });\n}","useCoreAPI":false,"core":false},"b17431138cd1fa23":{"_id":"b17431138cd1fa23","component":"RequestHandler","state":"post","action":"function post() { \n  var body = '',\n      qs = require('querystring');\n\n  this.request().on('data', function data(data) {\n    body = body + data;\n    if (body.length > 1e6) {\n      this.request().connection.destroy();\n    }\n  }.bind(this));\n\n  this.request().on('end', function end() {\n    var post = qs.parse(body),\n        context = this.context(),\n        doc = {};\n\n    if (Object.keys(post).length) {\n      doc = JSON.parse(decodeURIComponent(Object.keys(post)[0]));\n    }\n    \n    context.document = doc;\n   \n    // a message has arrived from another system\n    this.require('runtime').message({\n      'event': this.request().headers['x-system-event'] || 'externalPost',\n      'from': this.request().headers['x-system-id'] || '',\n      'data': [context, this.id()]\n    });\n  }.bind(this));\n}","useCoreAPI":false,"core":false},"g1c8bb107d91ca96":{"_id":"g1c8bb107d91ca96","component":"RequestHandler","state":"patch","action":"function patch() { \n  var body = '',\n      qs = require('querystring');\n\n  this.request().on('data', function data(data) {\n    body = body + data;\n    if (body.length > 1e6) {\n      this.request().connection.destroy();\n    }\n  }.bind(this));\n\n  this.request().on('end', function end() {\n    var post = qs.parse(body),\n        context = this.context(),\n        patch = {};\n\n    if (Object.keys(post).length) {\n      patch = JSON.parse(decodeURIComponent(Object.keys(post)[0]));\n    }\n    \n    context.field = Object.keys(patch)[0];\n    context.value = patch[Object.keys(patch)[0]];\n    \n    // a message has arrived from another system\n    this.require('runtime').message({\n      'event': this.request().headers['x-system-event'] || 'externalPatch',\n      'from': this.request().headers['x-system-id'] || '',\n      'data': [context, this.id()]\n    });\n  }.bind(this));\n}","useCoreAPI":false,"core":false},"j1d4bc174cf18613":{"_id":"j1d4bc174cf18613","component":"_Channel","state":"clientDatabaseUpdate","action":"function clientDatabaseUpdate(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId),\n      update = {};\n  \n  if (event.collection && $db[event.collection] && event.id) {\n    update[event.field] = event.value;\n    $db[event.collection].update({\n      '_id': event.id\n    }, update);\n    \n    doc = $db[event.collection].find({\n      '_id': event.id\n    })[0];\n    doc = JSON.parse(JSON.stringify(doc));\n    delete doc.classInfo;\n    \n    requestHandler.response().end(JSON.stringify(doc));\n  } else {\n    requestHandler.response().end('');\n  }\t\n}","useCoreAPI":true,"core":false},"s1c7da1ff4217270":{"_id":"s1c7da1ff4217270","component":"RequestHandler","state":"put","action":"function put() { \n   var body = '',\n      qs = require('querystring');\n\n  this.request().on('data', function data(data) {\n    body = body + data;\n    if (body.length > 1e6) {\n      this.request().connection.destroy();\n    }\n  }.bind(this));\n\n  this.request().on('end', function end() {\n    var doc = qs.parse(body),\n        context = this.context();\n    \n    if (Object.keys(doc).length) {\n      doc = JSON.parse(decodeURIComponent(Object.keys(doc)[0]));\n    }\n    context.document = doc;\n    \n    // a message has arrived from another system\n    this.require('runtime').message({\n      'event': this.request().headers['x-system-event'] || 'externalPut',\n      'from': this.request().headers['x-system-id'] || '',\n      'data': [context, this.id()]\n    });\n  }.bind(this));\n}","useCoreAPI":false,"core":false},"r14f8f12b9913289":{"_id":"r14f8f12b9913289","component":"StreamHandler","state":"stream","action":"function stream() { \n  this.response().writeHead(200, {\n    'Content-Type': 'text/event-stream', \n    'Cache-Control': 'no-cache', \n    'Connection': 'keep-alive'\n  });\n}","useCoreAPI":false,"core":false},"y137ee15e6717a6b":{"_id":"y137ee15e6717a6b","component":"_Channel","state":"externalPost","action":"function externalPost(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId),\n      doc = null,\n      tabid = [];\n\n  if (event.collection && $db[event.collection] ) {\n    tabid = $db[event.collection].insert(event.document);\n    doc = $db[event.collection].find({\n      '_id': tabid[0]\n    })[0];\n    doc = JSON.parse(JSON.stringify(doc));\n    delete doc.classInfo;\n\n    requestHandler.response().writeHead(201, { \n      'Content-Type': 'application/json', \n      'Access-Control-Allow-Origin': '*' \n    });\n    requestHandler.response().end(JSON.stringify(doc));\n  } else {\n    requestHandler.response().writeHead(200, { \n      'Content-Type': 'application/json', \n      'Access-Control-Allow-Origin': '*'\n    });\n    requestHandler.response().end('');\n  }\t\n}","useCoreAPI":true,"core":false},"q1f7f1141a41ef3b":{"_id":"q1f7f1141a41ef3b","component":"_Channel","state":"externalPatch","action":"function externalPatch(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId),\n      update = {},\n      doc = '';\n  \n  if (event.collection && $db[event.collection] && event.id) {\n    update[event.field] = event.value;\n    $db[event.collection].update({\n      '_id': event.id\n    }, update);\n    \n    doc = $db[event.collection].find({\n      '_id': event.id\n    })[0];\n    \n    if (doc) {\n      doc = JSON.parse(JSON.stringify(doc));\n      delete doc.classInfo;\n    }\n    \n    requestHandler.response().end(JSON.stringify(doc));\n  } else {\n    requestHandler.response().end('');\n  }\t\t\n}","useCoreAPI":true,"core":false},"b12cc710da219872":{"_id":"b12cc710da219872","component":"_Channel","state":"externalGet","action":"function externalGet(event, requestHandlerId) { \n  var search = [],\n      result = '',\n      requestHandler = null;\n\n  // find document(s)\n  if (event.collection && $db[event.collection]) {\n    if (event.id) {\n      search = $db[event.collection].find({\n        '_id': event.id\n      });\n\n      if (search.length) {\n        search = search[0];\n        if (event.property) { // get a component property\n          search = JSON.parse(JSON.stringify(search));\n          result = search[event.property];\n        } else { // get a component\n          search = JSON.parse(JSON.stringify(search));\n          delete search.classInfo;\n          result = search;\n        }\n      } else {\n        result = '';\n        this.require('logger').warn('There is no document with _id ' + '\\'' + event.id + '\\’ (for the collection \\'' + event.collection + '\\')');\n      }\n    } else { // get a collection\n      result = [];\n\n      search = $db[event.collection].find();\n      search.forEach(function (val) {\n        var doc = val;\n\n        doc = JSON.parse(JSON.stringify(doc));\n        delete doc.classInfo;\n\n        result.push(doc);\n      });\n    }\n  }\n    \n  // response  \n    \n  requestHandler = this.require(requestHandlerId);\n  requestHandler.response().writeHead(200, { \n    'Content-Type': 'application/json', \n    'Access-Control-Allow-Origin': '*' \n  });\n  \n  if (result === '') {\n    requestHandler.response().end('');\n  } else {\n    requestHandler.response().end(JSON.stringify(result));\n  }\t\n}","useCoreAPI":true,"core":false},"w12a1e1723b12eda":{"_id":"w12a1e1723b12eda","component":"_Channel","state":"externalDelete","action":"function externalDelete(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId);\n  \n  // delete compononent(s)\n  if (event.collection && $db[event.collection]) {\n    if (event.id) {\n      $db[event.collection].remove({\n        '_id': event.id\n      });\n    } else {\n      $db[event.collection].remove();\n    }\n  }\n  \n  // response\n  requestHandler.response().writeHead(200, { \n    'Content-Type': 'application/json', \n    'Access-Control-Allow-Origin': '*'\n  });\n  requestHandler.response().end('');\t\n}","useCoreAPI":true,"core":false},"w1786916bfb1f226":{"_id":"w1786916bfb1f226","component":"_Channel","state":"externalPut","action":"function externalPut(event, requestHandlerId) { \n  var requestHandler = this.require(requestHandlerId),\n      doc = '';\n  \n  if (event.collection && $db[event.collection] && event.id) {\n    search = $db[event.collection].find({\n      '_id': event.id\n    });\n\n    if (search.length) { // update\n\n      $db[event.collection].update({\n        '_id': event.id\n      }, event.document);\n\n      doc = $db[event.collection].find({\n        '_id': event.id\n      })[0];\n      doc = JSON.parse(JSON.stringify(doc));\n      delete doc.classInfo;\n\n      requestHandler.response().writeHead(200, { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' });\n      requestHandler.response().end(JSON.stringify(doc));\n    } else { // create\n\n      event.document._id = event.id;\n\n      $db[event.collection].insert(event.document);\n\n      doc = $db[event.collection].find({\n        '_id': event.id\n      })[0];\n      doc = JSON.parse(JSON.stringify(doc));\n      delete doc.classInfo;\n\n      requestHandler.response().writeHead(201, { \n        'Content-Type': 'application/json', \n        'Access-Control-Allow-Origin': '*' \n      });\n      requestHandler.response().end(JSON.stringify(doc));\n    }\n  } else {\n    requestHandler.response().writeHead(200, { \n      'Content-Type': 'application/json', \n      'Access-Control-Allow-Origin': '*' \n    });\n    requestHandler.response().end('');\n  }\t\n}","useCoreAPI":true,"core":false},"k1c9ab1bca112742":{"_id":"k1c9ab1bca112742","component":"PageRequestHandler","state":"sendPage","action":"function sendPage(url) { \n  var fs = require('fs'),\n      logger = this.require('logger');\n\n  fs.exists('.' + url, function exists(exists) {\n    if (exists) {\n      fs.readFile('.' + url, function readFile(error, content) {\n        if (error) {\n          logger.error(error); \n          this.response().writeHead(500);\n          res.end();\n        } else {\n          this.response().writeHead(200, {\n            'Content-Type': 'text/html'\n          });\n          this.response().end(content, 'utf-8');\n        }\n      }.bind(this));\n    } else {\n      logger.warn('page ' + url + ' is not found.');\n      this.response().writeHead(404);\n      this.response().end();\n    }\n  }.bind(this));\n}","useCoreAPI":false,"core":false},"p149c01e01c15a9f":{"_id":"p149c01e01c15a9f","component":"_Channel","state":"clientGet","action":"function clientGet(event, requestHandlerId) { \n  var search = [],\n      result = [],\n      requestHandler = null,\n      systemId = this.require('runtime').system().id(),\n      eventResult = {};\n \n  // find document(s)\n  if (event.collection && $db[event.collection]) {\n    if (event.id) {\n      search = $db[event.collection].find({\n        '_id': event.id\n      });\n\n      if (search.length) {\n        search = search[0];\n        search = JSON.parse(JSON.stringify(search));\n        delete search.classInfo;\n        result.push(search);\n      } else {\n        result = '';\n        this.require('logger').warn('There is no document with _id ' + '\\'' + event.id + '\\’ (for the collection \\'' + event.collection + '\\')');\n      }\n    } else { // get a collection\n      result = [];\n\n      search = $db[event.collection].find();\n      search.forEach(function (val) {\n        var doc = val;\n\n        doc = JSON.parse(JSON.stringify(doc));\n        delete doc.classInfo;\n\n        result.push(doc);\n      });\n    }\n  }\n    \n  // response  \n    \n  requestHandler = this.require(requestHandlerId);\n  requestHandler.response().writeHead(200, { \n    'Content-Type': 'application/json', \n    'Access-Control-Allow-Origin': '*' \n  });\n  \n  if (result === '') {\n    requestHandler.response().end('');\n  } else {\n    eventResult.from = systemId;\n    eventResult.event = 'serverGetResult';\n    eventResult.data = [{\n      'collection': event.collection,\n      'id': event.id,\n      'result': result\n    }];\n  \n    requestHandler.response().end(JSON.stringify(eventResult));\n  }\t\n}","useCoreAPI":true,"core":false}},"types":{"dbUpdateEvent":{"_id":"1f5c41309711752","name":"dbUpdateEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"id":{"type":"string","mandatory":true,"default":""},"field":{"type":"string","mandatory":true,"default":""},"value":{"type":"any","mandatory":true,"default":null}}},"dbRemoveEvent":{"_id":"1952e1ac4213f4a","name":"dbRemoveEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"id":{"type":"string","mandatory":true,"default":""}}},"dbInsertEvent":{"_id":"148ef1e19810e6d","name":"dbInsertEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"document":{"type":"object","mandatory":true,"default":{}}}},"fileStatus":{"_id":"k12bf518aec1008c","name":"fileStatus","type":"any","value":["unloaded","loaded"]},"message":{"name":"message","type":"object","schema":{"event":{"type":"string","mandatory":true},"from":{"type":"string","mandatory":false},"data":{"type":"object","mandatory":true}},"core":true},"Response":{"_id":"r11f2f117101acde","name":"Response","type":"object"},"dbFindEvent":{"_id":"v1d97c110761e033","name":"dbFindEvent","type":"object","schema":{"collection":{"type":"string","mandatory":false,"default":""},"id":{"type":"string","mandatory":false,"default":""},"property":{"type":"string","mandatory":false,"default":""}}},"getEvent":{"_id":"x130d61fc09123ef","name":"getEvent","type":"object","schema":{"collection":{"type":"string","mandatory":false,"default":""},"id":{"type":"string","mandatory":false,"default":""},"property":{"type":"string","mandatory":false,"default":""}}},"getResultEvent":{"_id":"s1b193106ee1c97d","name":"getResultEvent","type":"object","schema":{"collection":{"type":"string","mandatory":false,"default":""},"id":{"type":"string","mandatory":false,"default":""},"result":{"type":"array","mandatory":false,"default":[]}}},"putEvent":{"_id":"d113031718f19934","name":"putEvent","type":"object","schema":{"collection":{"type":"string","mandatory":true,"default":""},"id":{"type":"string","mandatory":true,"default":""},"document":{"type":"any","mandatory":true,"default":null}}},"Role":{"_id":"f8e3da5f-ab50-4b34-a1d6-88b1e3235eae","name":"Role","description":"Defines the available user roles","type":"string","value":["admin","supplier","employee","client","gremlin"]},"State":{"_id":"d7b89f3e-b0f7-4345-958e-752ee2e49bd0","name":"State","description":"","type":"string","value":["ACT","NSW","NT","SA","Vic","QLD","WA"]},"Address":{"_id":"c4f21f61-b80e-4adf-be6b-3d5d365c5736","name":"Address","description":"","type":"object","schema":{"number":{"description":"","type":"string","mandatory":false,"default":""},"street":{"description":"","type":"string","mandatory":false,"default":""},"suburb":{"description":"","type":"string","mandatory":false,"default":""},"state":{"description":"","type":"State","mandatory":false,"default":""},"postCode":{"description":"","type":"string","mandatory":false,"default":""}}},"AssetTypes":{"_id":"f63b1f5d-8127-4e6c-99c6-d5ed83899f4f","name":"AssetTypes","description":"The broad categories of Asset","type":"string","value":["vehicle","machinery"]},"BusinessType":{"_id":"caaa4cf7-a22b-46ae-91e2-b36893ef9998","name":"BusinessType","description":"Identifies whether the usiness pprovides services or consumes them","type":"string","value":["supplier","client"]},"AccountStatus":{"_id":"dcb796e0-f1b5-4686-8652-774441fe0c26","name":"AccountStatus","description":"","type":"string","value":["active","inactive"]},"DisputeStatus":{"_id":"dcb796e0-f1b5-4686-8652-774441fe0c26","name":"DisputeStatus","description":"","type":"string","value":["new","inProgress","onHold","resolved"]},"ContractStatus":{"_id":"eee7ca03-6a58-4bcf-afd5-652bb32acaaa","name":"ContractStatus","description":"","type":"any","value":["draft","active","complete"]}},"components":{"RestServer":{"restServer":{"_id":"restServer","ip":"127.0.0.1","port":"8080","apiName":"/rest","pushEnabled":false,"fileStorageEnabled":false}},"FileStorage":{"fileStorage":{"_id":"fileStorage","status":"unloaded"}},"_Channel":{"channel":{"_id":"channel"}},"ServiceProvider":{"f67e8c04-9db8-4371-97ba-ca4b006f65df":{"_id":"f67e8c04-9db8-4371-97ba-ca4b006f65df","abn":5544333458,"address":{"number":"5","street":"Dog St","suburb":"Logan","state":"QLD","postCode":"8765"},"name":"Patreon","phone":"1300 876 543","primaryContact":"f63285db-1514-40fa-9bf5-443a5567e0e2","type":"supplier","rating":5,"services":["e4285551-64d8-4c70-a342-dd5dc7a534dc","e4285551-64d8-4c70-a342-dd5dc7a534dc","c88a94a9-bbbc-478e-bd14-e053aa2b09a","fa64cd49-2585-49ed-bf85-1de27a6258b4"],"employees":["f63285db-1514-40fa-9bf5-443a5567e0e2","ef083059-dd56-4b48-9d2f-f5446f040d23"],"users":[]}},"Employee":{"ef083059-dd56-4b48-9d2f-f5446f040d23":{"_id":"ef083059-dd56-4b48-9d2f-f5446f040d23","business":"f67e8c04-9db8-4371-97ba-ca4b006f65df","email":"dave@patreon.com","emergencyContact":"Jill - Wife","emergencyPhone":"0454 456 789","firstName":"Dave","jobs":[],"lastName":"Rankin","password":"xxxx","phone":"0456 789 987","role":"employee"},"f63285db-1514-40fa-9bf5-443a5567e0e2":{"_id":"f63285db-1514-40fa-9bf5-443a5567e0e2","business":"f67e8c04-9db8-4371-97ba-ca4b006f65df","email":"jo@patreon.com","emergencyContact":"Danny - Son","emergencyPhone":"0432 456 789","firstName":"Jo","jobs":[],"lastName":"Walker","password":"xxxx","phone":"0456 789 987","role":"employee"}},"Business":{},"Client":{"e5603ae1-0c4a-4303-9387-10edc935bc2c":{"_id":"e5603ae1-0c4a-4303-9387-10edc935bc2c","abn":77654466544,"address":{},"bookings":[],"contracts":[],"name":"Lend Lease","phone":"07 66554433","primaryContact":"e8a1a181-24dc-41b0-ac8c-b28f42323d13","projects":[],"type":"client","users":["e8a1a181-24dc-41b0-ac8c-b28f42323d13"]}},"User":{"e8a1a181-24dc-41b0-ac8c-b28f42323d13":{"_id":"e8a1a181-24dc-41b0-ac8c-b28f42323d13","business":"e5603ae1-0c4a-4303-9387-10edc935bc2c","email":"natalie@lease.com","firstName":"Natalie","lastName":"Pod","password":"xxx","phone":"1300 654 654","role":"client"}},"Project":{"d08b9dba-afe2-4245-a3f7-2ed48ba71fce":{"_id":"d08b9dba-afe2-4245-a3f7-2ed48ba71fce","contracts":[],"description":"details details","endDate":"1970-01-01T00:00:00.000Z","name":"M1 Tunnel","startDate":"1970-01-01T00:00:00.000Z","sites":[],"client":"e5603ae1-0c4a-4303-9387-10edc935bc2c"}},"Contract":{"ac1dc886-bf21-4817-93e9-d09d1c8bb7c0":{"_id":"ac1dc886-bf21-4817-93e9-d09d1c8bb7c0","bookings":[],"budget":0,"client":"e5603ae1-0c4a-4303-9387-10edc935bc2c","description":"","end":"1970-01-01T00:00:00.000Z","file":"doc.pdf","name":"M1 Nerang to Robina","project":"d08b9dba-afe2-4245-a3f7-2ed48ba71fce","services":[],"start":"1970-01-01T00:00:00.000Z","status":"draft"}},"Asset":{},"ServiceCategory":{"c39009b2-3854-4ec4-babd-ca612abfe1ec":{"_id":"c39009b2-3854-4ec4-babd-ca612abfe1ec","active":true,"name":"Utility Inspections","services":["e4285551-64d8-4c70-a342-dd5dc7a534dc","e4285551-64d8-4c70-a342-dd5dc7a534dc"]},"cc1bbbae-7f48-4ef9-b334-68a3b4932291":{"_id":"cc1bbbae-7f48-4ef9-b334-68a3b4932291","active":true,"name":"Utility Maintenance","services":["c88a94a9-bbbc-478e-bd14-e053aa2b09a","fa64cd49-2585-49ed-bf85-1de27a6258b4"]}},"Service":{"c2b4da6e-e4f7-4543-b0c1-30a65e7faa0a":{"_id":"c2b4da6e-e4f7-4543-b0c1-30a65e7faa0a","active":true,"asset":{},"description":"Camera viewing along pipes","name":"CCTV Pile Inspection","rating":5,"serviceCategory":"c39009b2-3854-4ec4-babd-ca612abfe1ec","staffNumber":2,"state":"QLD","subService":[]},"e4285551-64d8-4c70-a342-dd5dc7a534dc":{"_id":"e4285551-64d8-4c70-a342-dd5dc7a534dc","active":true,"asset":{},"description":"Ensure the portals are safe","name":"Manhole Inspection","rating":5,"serviceCategory":"c39009b2-3854-4ec4-babd-ca612abfe1ec","staffNumber":1,"state":"QLD","subService":[]},"fa64cd49-2585-49ed-bf85-1de27a6258b4":{"_id":"fa64cd49-2585-49ed-bf85-1de27a6258b4","active":true,"asset":{},"description":"Pstch up the pipes","name":"Pipe  Patching","rating":5,"serviceCategory":"cc1bbbae-7f48-4ef9-b334-68a3b4932291","staffNumber":1,"state":"QLD","subService":[]},"c88a94a9-bbbc-478e-bd14-e053aa2b09a1":{"_id":"c88a94a9-bbbc-478e-bd14-e053aa2b09a1","active":true,"asset":{},"description":"","name":"Defect Locating","rating":5,"serviceCategory":"cc1bbbae-7f48-4ef9-b334-68a3b4932291","staffNumber":1,"state":"QLD","subService":[]}}},"_id":"134f61c924166c0"}